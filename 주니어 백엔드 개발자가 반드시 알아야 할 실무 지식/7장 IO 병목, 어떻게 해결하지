## 네트워크 IO와 자원 효율
- 서버는 다양한 구성 요소(DB, 레디스, 외부 API)와 네트워크를 통해서 데이터를 주고받는다.
- 데이터 입출력이 완료될 때까지 스레드는 아무런 작업도 하지 않은 채 기다린다 이는 CPU가 아무것도 하지 않는 시간이 발생한다는 의미이다.
- 생각의 발전 1 : 그렇다면 스레드를 많이 만들어서 CPU가 쉬지 못하도록 하자 (요청 당 스레드 방식으로 구현한 서버가 이 방식에 해당된다.)
  - 하지만, 스레드를 생성하는 것에 한계가 존재, 스레드도 메모리를 사용하기 때문이다.
  - 생각의 발전 1-1 : 그렇다면 메모리를 늘려서 사용할 스레드를 늘리자.
    - 하지만 메모리를 늘린다고 해도 스레드가 많아지면 컨텍스트 스위칭이 자주 발생하게 될 것이다. 왜냐하먄 cpu core 수는 고정되어져 있기 때문이다.
  - 그래서 트래픽이 많아진다면 아래와 같은 상황이 만들어진다.
    - IO 대기와 컨텍스트 스위칭에 따른 CPU 낭비
    - 요청마다 스레드를 할당하기 때문에 그것에 따른 메모리 낭비
  - 하지만 톰캣과 같은 요청 당 스레드를 만드는 방식이 비효율로 보일 수 있지만 다수의 서버에서는 문제가 없다


- 자원을 효율적으로 사용하는 방법 (메모리나 CPU 자원을 늘리지 않고도 더 많은 트래픽을 처리하는 방법)
  - 가상 스레드나 고루틴 같은 경량 스레드 사용하기
  - 논블로킹 또는 비동기 IO 사용하기
